import logging
import argparse


def set_logging(rank=-1):
    """
    %(message)s : output log content
    %(asctime)s : output logging time
    """
    logging.basicConfig(format='%(message)s',
                        level=logging.INFO if rank in [-1, 0] else logging.WARN)


def get_options(hyp_path='hyp/oi_hyp.yaml',
                data_path='data/VINet.yaml',
                model_cfg='models/cfg/VINet.yaml',
                resume=False, project='VINet-Runs', name='Train'):

    parser = argparse.ArgumentParser(description='VINet Train/Test Options')
    parser.add_argument('--hyp', type=str, default=hyp_path, help='Required hyper-parameters, i.e, batch-size.')
    parser.add_argument('--data', type=str, default=data_path, help='Train/Test dataset paths.')
    parser.add_argument('--model-cfg', type=str, default=model_cfg, help='VINet architecture.')
    parser.add_argument('--weights', type=str, default='', help='trained weight path.')
    parser.add_argument('--resume', default=resume, help='resume most recent training.')
    parser.add_argument('--project', default=project, help='save to project/name')
    parser.add_argument('--name', default=name, help='save to project/name')

    return parser.parse_args()
